name: Haskell CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        ghc: ['8.0.2', '8.2.2', '8.4.4', '8.6.5', '8.8.4', '8.10.7', '9.0.2', '9.2.5', '9.4.4']
        cabal: ['3.6.2.0']
        include:
          - os: ubuntu-latest
            ghc: 'recommended'
          - os: ubuntu-latest
            ghc: 'latest'
            cabal: 3.6.2.0
        exclude:
          - os: macOS-latest
            ghc: '8.0.2'
          - os: macOS-latest
            ghc: '8.2.2'
          - os: macOS-latest
            ghc: '8.4.4'
          - os: macOS-latest
            ghc: '8.6.5'
          - os: macOS-latest
            ghc: '8.8.4'
          - os: macOS-latest
            ghc: '9.0.2'
          - os: windows-latest
            ghc: '8.0.2'
          - os: windows-latest
            ghc: '8.2.2'
          - os: windows-latest
            ghc: '8.4.4'
          - os: windows-latest
            ghc: '8.6.5'
          - os: windows-latest
            ghc: '8.8.4'
          - os: windows-latest
            ghc: '9.0.2'

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get -y update
        sudo apt-get -y install libtinfo5 libtinfo6 libncurses5 libncurses6

    - name: Install ghc/cabal
      run: |
        set -eux
        ghcup install ghc --set ${{ matrix.ghc }}
        ghcup install cabal --set ${{ matrix.cabal }}
      shell: bash

    - name: Build
      run: |
        set -eux
        [ -e ~/.ghcup/env ] && source ~/.ghcup/env
        [ "${{ matrix.ghc }}" == 'recommended' ] ||
          [ "${{ matrix.ghc }}" == 'latest' ] ||
          [ "$(ghc --numeric-version)" = "${{ matrix.ghc }}" ]
        cabal update
        cabal build --enable-tests --enable-benchmarks
        cabal test
        cabal haddock
        cabal check
        cabal sdist
      shell: bash

    - if: matrix.os == 'ubuntu-latest'
      name: make all
      run: |
        set -eux
        export "PATH=$HOME/.cabal/bin:$PATH"
        cabal install --overwrite-policy=always --install-method=copy cpphs
        make all
        git diff --exit-code

  emulated:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        arch: ['s390x', 'ppc64le', 'armv7', 'aarch64']
    steps:
    - uses: actions/checkout@v2
    - uses: uraimo/run-on-arch-action@v2.1.1
      timeout-minutes: 60
      with:
        arch: ${{ matrix.arch }}
        distro: ubuntu20.04
        githubToken: ${{ github.token }}
        install: |
          apt-get update -y
          apt-get install -y ghc cabal-install libghc-quickcheck2-dev cpphs git make
        run: |
          cabal update
          cabal test
          cabal haddock
          cabal check
          cabal sdist

  emulated-i386:
    runs-on: ubuntu-latest
    container:
      image: i386/ubuntu:bionic
    steps:
    - name: install
      run: |
          apt-get update -y
          apt-get install -y ghc cabal-install libghc-quickcheck2-dev cpphs git make
      shell: bash
    - uses: actions/checkout@v1
    - name: test
      run: |
        cabal update
        cabal test
        cabal haddock
        cabal check
        cabal sdist
      shell: bash
